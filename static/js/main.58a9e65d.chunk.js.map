{"version":3,"sources":["data/Value.tsx","common/Logo.tsx","pages/header/atom/NavigateButton.tsx","pages/header/mol/Navigator.tsx","pages/header/Header.tsx","pages/pages/atom/CircledIcon.tsx","pages/pages/atom/LoxygenIcon.tsx","pages/header/atom/WelcomeText.tsx","pages/pages/HomePage.tsx","pages/pages/Error404.tsx","pages/Router.tsx","data/NavigatesTo.ts","pages/drawer/atom/DrawerNavButton.tsx","pages/drawer/mol/DrawerNavigation.tsx","pages/drawer/Drawer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Color","LogoWrapper","styled","a","MainNameDiv","div","SubNameDiv","Logo","href","NavigateButtonRoot","props","border","css","NavigateButton","isCurrentPage","window","location","pathname","url","caption","NavigatorRoot","span","Navigator","this","navigatesTo","map","value","index","key","React","HeaderRoot","HideOnSmartphone","ShowOnSmartphone","Hamburger","GiHamburgerMenu","Header","onClick","onDrawerOpen","CircledIcon","img","LoxygenIcon","src","MarginedBox","BiggerText","WelcomeText","Centered","HomePage","NotFoundPageWrapper","ErrorCode","ErrorContent","ErrorDescription","errorMessagesList","NotFoundPage","Math","floor","random","length","AppRouter","exact","path","component","NavigatesTo","DrawerNavButtonRoot","DrawerNavButton","DrawerNavigation","pages","page","DrawerRoot","CloseButton","AnimatedDrawerRoot","animated","Drawer","x","useSpring","isOpen","style","left","interpolate","o","onClosed","ReactApp","FixedHeader","header","ContentWrapper","App","useState","drawerOpen","setDrawerOpen","className","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.58a9e65d.chunk.js","sourcesContent":["export const Color = {\n  black: \"#181821\",\n  blackishGray: \"#242424\",\n  mediumGray: \"#4c4c4c\",\n  whitishGray: \"#898989\",\n  white: \"#e0e0e0\",\n  accent: \"#4f93ad\",\n};\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Color } from \"data/Value\";\n\nconst LogoWrapper = styled.a`\n  text-decoration: none;\n  color: unset;\n\n  display: inline-block;\n  padding: 0.7em 2em;\n  line-height: 0.9em;\n  transition: all 0.25s;\n  text-align: left;\n  :hover {\n    color: ${Color.whitishGray};\n    cursor: pointer;\n  }\n`;\n\nconst MainNameDiv = styled.div`\n  font-size: 120%;\n  border-bottom: #555255 2px solid;\n`;\n\nconst SubNameDiv = styled.div`\n  font-size: 80%;\n`;\n\nexport function Logo() {\n  return (\n    <LogoWrapper href=\"/\">\n      <MainNameDiv>loxygen.k</MainNameDiv>\n      <SubNameDiv>flisan</SubNameDiv>\n    </LogoWrapper>\n  );\n}\n","import * as React from \"react\";\nimport { PageDestination } from \"data/types/PageDestination\";\nimport styled, { css } from \"styled-components\";\nimport { Color } from \"data/Value\";\n\nconst NavigateButtonRoot = styled.a<{ border: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-size: 80%;\n  color: ${Color.white};\n  background: ${Color.mediumGray};\n  text-decoration: none;\n\n  padding: 0 1em;\n  width: 5em;\n\n  border-right: 2px solid ${Color.blackishGray};\n\n  transition: all 0.25s;\n\n  ${(props) =>\n    props.border\n      ? css`\n          border-bottom: 3px solid #61dafb;\n        `\n      : css`\n          padding-bottom: 3px;\n        `}\n  :hover {\n    background-color: ${Color.whitishGray};\n    color: ${Color.blackishGray};\n  }\n`;\n\nexport function NavigateButton(props: PageDestination): JSX.Element {\n  const isCurrentPage = window.location.pathname === props.url;\n\n  return (\n    <NavigateButtonRoot border={isCurrentPage} href={props.url}>\n      {props.caption}\n    </NavigateButtonRoot>\n  );\n}\n","import * as React from \"react\";\nimport { PageDestination } from \"data/types/PageDestination\";\nimport { NavigateButton } from \"../atom/NavigateButton\";\nimport styled from \"styled-components\";\n\nconst NavigatorRoot = styled.span`\n  height: 100%;\n  vertical-align: top;\n\n  display: inline-flex;\n`;\n\ntype NavigatorProps = {\n  navigatesTo: PageDestination[];\n};\n\nexport class Navigator extends React.Component<NavigatorProps> {\n  render() {\n    return (\n      <NavigatorRoot>\n        {this.props.navigatesTo.map((value, index) => (\n          <NavigateButton key={index} caption={value.caption} url={value.url} />\n        ))}\n      </NavigatorRoot>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Color } from \"data/Value\";\nimport styled from \"styled-components\";\nimport { Logo } from \"../../common/Logo\";\nimport { PageDestination } from \"../../data/types/PageDestination\";\nimport { Navigator } from \"./mol/Navigator\";\nimport { GiHamburgerMenu } from \"react-icons/gi\";\n\nconst HeaderRoot = styled.div`\n  background-color: ${Color.blackishGray};\n  height: 3em;\n\n  @media screen and (max-width: 700px) {\n    text-align: center;\n  }\n`;\n\nconst HideOnSmartphone = styled.span`\n  @media screen and (max-width: 700px) {\n    display: none;\n  }\n`;\n\nconst ShowOnSmartphone = styled.span`\n  @media screen and (min-width: 700px) {\n    display: none;\n  }\n`;\n\nconst Hamburger = styled(GiHamburgerMenu)`\n  position: fixed;\n  top: 1em;\n  right: 1em;\n`;\n\ntype HeaderProps = {\n  navigatesTo: PageDestination[];\n  onDrawerOpen: () => void;\n};\n\nexport function Header(props: HeaderProps): JSX.Element {\n  return (\n    <HeaderRoot>\n      <Logo />\n      <HideOnSmartphone>\n        <Navigator navigatesTo={props.navigatesTo} />\n      </HideOnSmartphone>\n      <ShowOnSmartphone>\n        <Hamburger onClick={() => props.onDrawerOpen()} />\n      </ShowOnSmartphone>\n    </HeaderRoot>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const CircledIcon = styled.img`\n  width: 12rem;\n  align-content: center;\n  text-align: center;\n  border-radius: 12rem;\n\n  border: #263353 5px dashed;\n`;\n","import * as React from \"react\";\nimport { CircledIcon } from \"./CircledIcon\";\n\nexport function LoxygenIcon() {\n  return (\n    <div>\n      <CircledIcon src=\"loxygen.png\" />\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst MarginedBox = styled.div`\n  margin: 1.5rem;\n  font-size: 1.2em;\n`;\n\nconst BiggerText = styled.span`\n  font-size: 1.4em;\n`;\n\nexport function WelcomeText() {\n  return (\n    <MarginedBox>\n      Welcome to <br />\n      <BiggerText>loxygen.k Portfolio</BiggerText>\n    </MarginedBox>\n  );\n}\n","import * as React from \"react\";\nimport { LoxygenIcon } from \"./atom/LoxygenIcon\";\nimport styled from \"styled-components\";\nimport { WelcomeText } from \"../header/atom/WelcomeText\";\n\nconst Centered = styled.div`\n  text-align: center;\n`;\n\nexport function HomePage() {\n  return (\n    <div>\n      <Centered>\n        <LoxygenIcon />\n        <WelcomeText />\n      </Centered>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst NotFoundPageWrapper = styled.div`\n  text-align: center;\n`;\n\nconst ErrorCode = styled.span`\n  font-size: 3em;\n`;\n\nconst ErrorContent = styled.span`\n  font-size: 1.2em;\n  margin-left: 0.3em;\n`;\n\nconst ErrorDescription = styled.div`\n  margin-top: 0.75em;\n  font-size: 0.8em;\n  color: #999;\n`;\n\nconst errorMessagesList = [\n  \"変なとこにアクセスしてるみたいです。\",\n  \"何か見ようとしたんでしょうか？\",\n  \"時空の狭間にいるようです。\",\n  \"今なら間に合います。戻るボタンを。\",\n  \"未知の土地を歩くのってワクワクしますが、\\n帰れなくなりそうで怖いですよね。\",\n];\n\nexport function NotFoundPage() {\n  return (\n    <NotFoundPageWrapper>\n      <ErrorCode>404</ErrorCode>\n      <ErrorContent>Page not found</ErrorContent>\n      <ErrorDescription>\n        {\n          errorMessagesList[\n            Math.floor(Math.random() * errorMessagesList.length)\n          ]\n        }\n      </ErrorDescription>\n    </NotFoundPageWrapper>\n  );\n}\n","import * as React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { HomePage } from \"./pages/HomePage\";\nimport { NotFoundPage } from \"./pages/Error404\";\n\nexport function AppRouter(): JSX.Element {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"\" component={NotFoundPage} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import { PageDestination } from \"./types/PageDestination\";\n\nexport const NavigatesTo: PageDestination[] = [\n  {\n    caption: \"ホーム\",\n    url: \"/\",\n  },\n];\n","import * as React from \"react\";\nimport { PageDestination } from \"data/types/PageDestination\";\nimport styled, { css } from \"styled-components\";\n\nconst DrawerNavButtonRoot = styled.div<{ border: boolean }>`\n  background-color: #37376d;\n  padding: 0.5em;\n  margin: 2px;\n  user-select: none;\n\n  ${(props) =>\n    props.border\n      ? css`\n          border-left: 3px solid #6262b1;\n        `\n      : css`\n          padding-left: calc(0.5em + 3px);\n        `}\n`;\n\nexport function DrawerNavButton(props: PageDestination) {\n  const isCurrentPage = window.location.pathname === props.url;\n\n  return (\n    <DrawerNavButtonRoot border={isCurrentPage}>\n      {props.caption}\n    </DrawerNavButtonRoot>\n  );\n}\n","import * as React from \"react\";\nimport { PageDestination } from \"data/types/PageDestination\";\nimport { DrawerNavButton } from \"../atom/DrawerNavButton\";\n\ntype DrawerNavigationProps = {\n  pages: PageDestination[];\n};\n\nexport function DrawerNavigation(props: DrawerNavigationProps) {\n  return (\n    <>\n      {props.pages.map((page, index) => (\n        <DrawerNavButton key={index} url={page.url} caption={page.caption} />\n      ))}\n    </>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { useSpring, animated } from \"react-spring\";\nimport { Logo } from \"../../common/Logo\";\nimport { PageDestination } from \"../../data/types/PageDestination\";\nimport { DrawerNavigation } from \"./mol/DrawerNavigation\";\n\nconst DrawerRoot = styled.div`\n  background-color: #292942;\n\n  font-size: 0.9em;\n\n  position: fixed;\n  left: 0;\n  top: 0;\n  bottom: 0;\n\n  overflow: scroll;\n\n  box-sizing: border-box;\n\n  padding: 1em 0;\n  width: 10em;\n  height: 100vh;\n`;\n\nconst CloseButton = styled.div`\n  margin: 0.9em 1em;\n  padding: 0.2em 0;\n\n  border-top: 1px solid #43436c;\n\n  font-size: 0.75em;\n\n  user-select: none;\n`;\n\nconst AnimatedDrawerRoot = animated(DrawerRoot);\n\ntype DrawerProps = {\n  isOpen: boolean;\n  pages: PageDestination[];\n  onClosed: () => void;\n};\n\nexport function Drawer(props: DrawerProps) {\n  const { x } = useSpring({\n    x: props.isOpen ? 0 : -15,\n  });\n\n  return (\n    <AnimatedDrawerRoot\n      style={{\n        left: x.interpolate((o) => `${o}em`),\n      }}\n    >\n      <Logo />\n      <DrawerNavigation pages={props.pages} />\n      <CloseButton onClick={props.onClosed}>閉じる</CloseButton>\n    </AnimatedDrawerRoot>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Color } from \"data/Value\";\nimport { Header } from \"pages/header/Header\";\nimport { AppRouter } from \"./pages/Router\";\nimport { NavigatesTo } from \"./data/NavigatesTo\";\nimport { Drawer } from \"./pages/drawer/Drawer\";\n\nconst ReactApp = styled.div`\n  background-color: ${Color.black};\n  color: ${Color.white};\n  min-height: calc(100vh - 2em);\n  font-size: 150%;\n`;\n\nconst FixedHeader = styled.header`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 4.5rem;\n`;\n\nconst ContentWrapper = styled.div`\n  margin: 3rem 0 0;\n  padding: 4.5rem 1em;\n\n  @media screen and (max-width: 450px) {\n    font-size: 0.7em;\n  }\n`;\n\nfunction App() {\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\n\n  return (\n    <ReactApp>\n      <FixedHeader className=\"App-header\">\n        <Header\n          navigatesTo={NavigatesTo}\n          onDrawerOpen={() => setDrawerOpen(!drawerOpen)}\n        />\n      </FixedHeader>\n      <Drawer\n        isOpen={drawerOpen}\n        pages={NavigatesTo}\n        onClosed={() => setDrawerOpen(false)}\n      />\n      <ContentWrapper>\n        <AppRouter />\n      </ContentWrapper>\n    </ReactApp>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this pages are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the pages.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the pages.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our pages is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}